[
  {
    "objectID": "district_adm_plots.html",
    "href": "district_adm_plots.html",
    "title": "An Overview of Oregon’s State Funding Allocation",
    "section": "",
    "text": "The state of Oregon uses a student-based funding model to allocate revenues to its 197 school districts. In this analysis, I will describe descriptive trends in district enrollment, districts’ state-funding allocation, district revenue, and district expenditure related to students with disabilities whose services cost more than a given threshold and are paid by the grant called High-Cost Disability Grant."
  },
  {
    "objectID": "district_adm_plots.html#district-adm-data",
    "href": "district_adm_plots.html#district-adm-data",
    "title": "An Overview of Oregon’s State Funding Allocation",
    "section": "District ADM Data",
    "text": "District ADM Data\n\nTrends in Enrollment Across Years with the Average Highlighted\n\n\n\n\n\n\n\n\n\n\n\nTrends in Enrollment Across Years with Districts &gt; 30k enrollment Highlighted\n\n\n\n\n\n\n\n\n\n\n\nTrends in Enrollment Across Years with Districta 13-20k enrollment Highlighted\n\n\n\n\n\n\n\n\n\n\n\nTrends in Enrollment Across Years with Districts &lt;10 students Highlighted\n\n\n\n\n\n\n\n\n\n\n\nTrends in State - Subgroup Enrollment\n\n\n\n\n\n\n\n\n\n\n\nTrends in District - Subgroup Enrollment Across Years\n\n\n[[1]]\n\n\n\n\n\n\n\n\n\n\n[[2]]\n\n\n\n\n\n\n\n\n\n\n[[3]]\n\n\n\n\n\n\n\n\n\n\n[[4]]\n\n\n\n\n\n\n\n\n\n\n[[5]]\n\n\n\n\n\n\n\n\n\n\n[[6]]\n\n\n\n\n\n\n\n\n\n\n\nTrends in District - Subgroup Enrollment by Total Enrollment For One-Year\n\n\n[[1]]\n\n\n\n\n\n\n\n\n\n\n[[2]]\n\n\n\n\n\n\n\n\n\n\n[[3]]\n\n\n\n\n\n\n\n\n\n\n[[4]]\n\n\n\n\n\n\n\n\n\n\n[[5]]\n\n\n\n\n\n\n\n\n\n\n[[6]]"
  },
  {
    "objectID": "district_adm_plots.html#district-funds-allocation-data",
    "href": "district_adm_plots.html#district-funds-allocation-data",
    "title": "An Overview of Oregon’s State Funding Allocation",
    "section": "District Funds Allocation Data",
    "text": "District Funds Allocation Data"
  },
  {
    "objectID": "district_adm_plots.html#revenue-data",
    "href": "district_adm_plots.html#revenue-data",
    "title": "An Overview of Oregon’s State Funding Allocation",
    "section": "Revenue Data",
    "text": "Revenue Data\n\nState Trends in Per-pupil revenue based on sources\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTrends in Per-pupil revenue by Districts based on sources\n\n\n[[1]]\n\n\n\n\n\n\n\n\n\n\n[[2]]\n\n\n\n\n\n\n\n\n\n\n[[3]]\n\n\n\n\n\n\n\n\n\n\n[[4]]\n\n\n\n\n\n\n\n\n\n\n[[5]]\n\n\n\n\n\n\n\n\n\nDescribe: Other includes balance in the state account.\n\n\nTrends in Revenue by District Enrollment\n\n\n[[1]]\n\n\n\n\n\n\n\n\n\n\n[[2]]\n\n\n\n\n\n\n\n\n\n\n[[3]]\n\n\n\n\n\n\n\n\n\n\n[[4]]\n\n\n\n\n\n\n\n\n\n\n[[5]]"
  },
  {
    "objectID": "district_adm_plots.html#hcd-population",
    "href": "district_adm_plots.html#hcd-population",
    "title": "An Overview of Oregon’s State Funding Allocation",
    "section": "HCD Population",
    "text": "HCD Population\n\nStudents eligible for HCD and Grant Amount\n\n\n\n\n\n\n\n\n\n\n\nStudents eligible for HCD and Per-pupil expenditure above threshold\n\n\n\n\n\n\n\n\n\n\n\nPer-pupil reimbursment and Per-pupil expenditure above threshold"
  },
  {
    "objectID": "code_explanation.html",
    "href": "code_explanation.html",
    "title": "Scraping Over 2000 PDF Pages!",
    "section": "",
    "text": "One of the data sources I worked on for the project were public documentation from the Oregon Department of Education (ODE) that detailed state funds allocation to school districts by student types. This document came in the form of structured .pdfs. The primary ‘Data Sciency’ task I undertook during the capstone was to scrape 14 pdfs of 233 pages each.\n\nIn this section, I explain the logic of the text-scraping code. All these functions are found in the code/ folder. \nLet’s start by looking at one pdf page.\n\n\n\n\n\n\n\n\n\n\nThe first step is the read the pdf as a dataframe.\n\n\n\n\nAs parameter, I pass the relative file path where the pdf is saved.\n\n\n\n\nI use the pdf_text() function from the pdftools package which converts each pdf page into an object of type string.\n\n\n\n\nThen, I apply a series of cleaning process across each page-character object using the map2_dfr() function from the purr package.\n\n\n\n\nThe cleaning steps include breaking the string into different lines separating at next line delimiter, removing white spaces, and multiple spaces in each line, and changing the hyphen symbol.\n\n\n\n\nNow each line of each page is a different character object. I collapse all of them into a single dataframe.\n\n\n\n\nIn the next function, I find lines corresponding to district enteries so that I can leverage the structure.\n\n\n\n\nThen, I split the dataframe by district, so that each district has all its lines in a separate object.\n\n\n\n\nThis function shows the steps to extract information from lines related to a single district.\n\n\n\n\nThe function parameters is a district-specific dataframe, created above.\n\n\n\n\nI classify all the lines in accordance with the structure.\n\n\n\n\nThen, I use regular expressions to extract key details based on information_type\n\n\n\n\nAnother instance where I used a regular expressions to extract key details\n\n\n\n\nLastly, I organize this information as a dataframe.\n\n\n\n\nLastly, I organize this information as a dataframe.\n\n\n\n\n\n\n\nscrape_pdf_data &lt;- function(file_path) {\n\n  file_text_lines &lt;- pdf_text(file_path) %&gt;%\n    map2_dfr(., 1:length(.), ~ {\n      text &lt;- strsplit(.x, \"\\n\")[[1]]\n      text &lt;- text[!grepl(\"^\\\\s*$\", text)]\n      text &lt;- gsub(\"^\\\\s\\\\s+\", \"\", text)\n      text &lt;- gsub(\"\\\\s+\", \" \", text)\n      text &lt;- gsub(\"‐\", \"-\", text)\n\n      page_df &lt;- data.frame(text = text, page = .y)\n\n      return(page_df)\n    })\n\n  [...]\n}\n\n\n\n\nscrape_pdf_data &lt;- function(file_path) {\n  [...]\n  \n  get_district_lines &lt;- file_text_lines %&gt;%\n    mutate(district_id_found = as.integer(grepl(\"District ID:\", text)))\n    select(page, district_id_found) %&gt;%\n    distinct() %&gt;%\n    filter(district_id_found == 1) %&gt;%\n    mutate(district_index = row_number()) %&gt;%\n    select(-district_id_found) %&gt;%\n    full_join(tibble(page = 1:max(file_text_lines$page)), by = \"page\") %&gt;%\n    arrange(page) %&gt;%\n    fill(district_index, .direction = \"down\")\n\n  district_year_list &lt;- file_text_lines %&gt;%\n    left_join(get_district_lines) %&gt;%\n    split(., .$district_index)\n\n  return(district_year_list)\n}\n\n\n\n\none_district_info &lt;- function(district_df) {\n  district_df &lt;- district_df %&gt;%\n    mutate(\n      information_type = case_when(\n        grepl(\"District ID\", text) ~ \"district_info\",\n        # adding as files from 2014 onwards have this in the entry name\n        grepl(\"for funding calculation|information only\", text) ~ \"entry_name\",\n        grepl(\":\", text) ~ \"category_info\",\n        grepl(\"ADMw\", text) ~ \"total\",\n        TRUE ~ \"entry_name\"\n      )\n    )  %&gt;%\n    mutate(entry_index = cumsum(information_type == \"entry_name\"))\n  \n  # grab district level info\n  district_details &lt;- district_df %&gt;%\n    filter(information_type == \"district_info\") %&gt;%\n    select(text) %&gt;%\n    unlist() %&gt;%\n    str_match(., \"^(.*?),\\\\s*(.*?)\\\\s*District ID:\\\\s*(\\\\d+)$\")\n   \n  [...]\n\n\n\n\n# grab each entry-level information\none_district_info &lt;- function(district_df) {\n  [...]\n  entry_category_information &lt;- district_df %&gt;%\n    filter(entry_index != 0) %&gt;%\n    split(., .$entry_index) %&gt;%\n    map_dfr(., ~ {\n      # pattern different for 2024, no = sign\n      category_pattern &lt;-  \"(.*):\\\\s*(-?[\\\\d,]+\\\\.\\\\d+)?\\\\s*X\\\\s*(-?[\\\\d.]+)\n      \\\\s*=?\\\\s*(-?[\\\\d,]+\\\\.\\\\d+)?\\\\s*(-?[\\\\d,]+\\\\.\\\\d+)?\\\\s*X\\\\s*(-?[\\\\d.]+)\n      \\\\s*=?\\\\s*(-?[\\\\d,]+\\\\.\\\\d+)?\"\n      \n      \n      .x %&gt;%\n        filter(information_type == \"category_info\") %&gt;%\n        select(text) %&gt;%\n        unlist() %&gt;%\n        str_match(., category_pattern) %&gt;%\n        as.data.frame() %&gt;%\n        select(-V7) %&gt;%\n        rename(\n          \"org_text\" = \"V1\",\n          \"category\" = \"V2\",\n          \"current_year_adm\" = \"V3\",\n          \"category_weight\" = \"V4\",\n          \"current_year_admw\" = \"V5\",\n          \"past_year_adm\" = \"V6\",\n          \"past_year_admw\" = \"V8\"\n        ) \n    )\n  \n  [...]\n}\n\n\n\n\n\n\nI go through this process for all pdfs. Now, Let’s walk-through the steps using an example."
  },
  {
    "objectID": "code_explanation2.html",
    "href": "code_explanation2.html",
    "title": "Run-Through Example",
    "section": "",
    "text": "One of the data sources I worked on for the project were public documentation from the Oregon Department of Education (ODE) that detailed state funds allocation to school districts by student types. This document came in the form of structured .pdfs. The primary ‘Data Sciency’ task I undertook during the capstone was to scrape 14 pdfs of 233 pages each.\n In this section, I will walkthrough an example of scraping data for one district. All these functions are found in the code/ folder. \nLet’s start by looking at one pdf page.\n\n\n\n\n\n\nLet’s see the intermediate steps for transforming the data.\n\n\n\n\n\nFrom the pdf, I get to a dataframe of each line.\n\n\n\n\nThen, I create a list of 197 dataframes corresponding to informaion associated with each Oregon school district.\n\n\n\n\nI classify each line leveraging the structure.\n\n\n\n\nUsing the line classified as district_info, I grabbed the district details.\n\n\n\n\nThe resulting dataframe for one school district after applying the regular expressions rules.\n\n\n\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n     [,1]                                          [,2]           [,3]         \n[1,] \"Baker County, Baker SD 5J District ID: 1894\" \"Baker County\" \"Baker SD 5J\"\n     [,4]  \n[1,] \"1894\"\n\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\nAnd then repeating it over across all districts, and all years."
  }
]