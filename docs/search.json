[
  {
    "objectID": "district_adm_plots.html",
    "href": "district_adm_plots.html",
    "title": "An Overview of Oregon’s State Funding Allocation",
    "section": "",
    "text": "The state of Oregon uses a student-based funding model to allocate revenues to its 197 school districts. In this article, I will describe trends in funding allocation from 2011 to 2024.\n\n# load libraries\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(plotly)\n\n\nAttaching package: 'plotly'\n\nThe following object is masked from 'package:ggplot2':\n\n    last_plot\n\nThe following object is masked from 'package:stats':\n\n    filter\n\nThe following object is masked from 'package:graphics':\n\n    layout\n\n\n\ndistrict_year_adm &lt;- readr::read_csv(here::here(\"data_clean/district_year_admw.csv\")) %&gt;%\n  select(-1) %&gt;%\n  # make columns for iep related information\n  #group_by(school_year, entry_name, district_name) \n  rowwise() %&gt;%\n  mutate(district_iep_students = \n           ifelse(grepl(\"IEP Students\", category), parse_number(category),NA)) %&gt;%\n  ungroup() %&gt;%\n  group_by(district_id, school_year) %&gt;%\n  mutate(district_iep_students = sum(district_iep_students, na.rm = T),\n         district_iep_percent = district_iep_students/current_year_adm_district, \n         district_iep_11 = sum(current_year_adm[grepl(\"IEP Students\", category)]),\n         district_iep_above_11 = sum(current_year_adm[grepl(\"IEP Above\", category)]),\n         district_iep_no_extra = district_iep_students - district_iep_11 - district_iep_above_11,\n         district_iep_eff_weight = (district_iep_11 + district_iep_above_11)/district_iep_students\n         )\n\nNew names:\nRows: 44424 Columns: 27\n── Column specification\n──────────────────────────────────────────────────────── Delimiter: \",\" chr\n(5): org_text, category, entry_name, district_geo, district_name dbl (22):\n...1, current_year_adm, category_weight, current_year_admw, past_y...\nℹ Use `spec()` to retrieve the full column specification for this data. ℹ\nSpecify the column types or set `show_col_types = FALSE` to quiet this message.\n• `` -&gt; `...1`\n\nhcd_year &lt;-  readr::read_csv(here::here(\"data_clean/hcd_year_good.csv\")) %&gt;%\n  select(-1)\n\nNew names:\nRows: 985 Columns: 18\n── Column specification\n──────────────────────────────────────────────────────── Delimiter: \",\" dbl\n(18): ...1, dist_id, actual_hcd_count, actual_expenses, actual_allowed, ...\nℹ Use `spec()` to retrieve the full column specification for this data. ℹ\nSpecify the column types or set `show_col_types = FALSE` to quiet this message.\n• `` -&gt; `...1`\n\n\n\nyear_dotplot &lt;- function(df, var_y , var_x, log_on = T,\n                         lab_x = \"\", lab_y = \"Year\"){\n  \n  plot &lt;- district_year_adm %&gt;%\n  distinct(district_id, {{var_y}}, {{var_x}}, district_name) %&gt;%\n  ggplot(aes(y = fct_rev(factor({{var_y}})), x = {{var_x}}, color = {{var_x}})) +\n  geom_jitter(show.legend = F, alpha = 0.4) +\n  geom_boxplot(outliers = F, fill = \"transparent\", show.legend = F)+\n  labs(\n    x = lab_x,\n    y = lab_y\n  ) +\n  theme_minimal() +\n scale_color_continuous(type = \"viridis\")\n  \n  if(log_on == TRUE){\n    plot &lt;- plot +\n      scale_color_continuous(trans = \"log10\", type = \"viridis\")+\n      scale_x_continuous(trans = \"log10\",\n                     breaks = c(1, 10, 100, 1000, 10000))\n      \n  }\n\n  return(plot)\n}\n\none_year_scatterplot &lt;- function(df, year = 2011, \n                                 var_y, var_x, log_x_on = T, log_y_on = T,\n                                lab_x = \"\", lab_y = \"\") {\n  \n  plot &lt;- df %&gt;%\n  filter(school_year == year) %&gt;%\n  distinct(school_year, {{var_x}}, {{var_y}}) %&gt;%\n  ggplot(aes(x = {{var_x}}, y = {{var_y}})) +\n  geom_point() +\n  labs(\n    x = lab_x,\n    y = lab_y\n  ) +\n  theme_minimal()  +\n  theme(\n    panel.grid.minor = element_blank()\n  )\n  \n  if(log_x_on == TRUE){\n    plot &lt;- plot +\n      scale_x_continuous(trans = \"log10\",\n                     breaks = c(1, 10, 100, 1000, 10000))\n  }\n  \n  if(log_y_on == TRUE){\n    plot &lt;- plot +\n      scale_y_continuous(trans = \"log10\",\n                     breaks = c(1, 10, 100, 1000, 10000))\n  }\n  \n  return(plot)\n  \n}\n\n\n\n\n\nDistrict-ADM by school year\n\nyear_dotplot(district_year_adm,\n             var_y = school_year,\n             var_x = current_year_adm_district,\n             log_on = T,\n             lab_x = \"District Average Daily Membership (ADM)\") \n\nScale for colour is already present.\nAdding another scale for colour, which will replace the existing scale.\n\n\nWarning: Removed 2 rows containing non-finite outside the scale range\n(`stat_boxplot()`).\n\n\nWarning: The following aesthetics were dropped during statistical transformation:\ncolour.\nℹ This can happen when ggplot fails to infer the correct grouping structure in\n  the data.\nℹ Did you forget to specify a `group` aesthetic or to convert a numerical\n  variable into a factor?\n\n\nWarning: Removed 2 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\n\nWhat proportion of District-ADM do districts get?\n\ndistrict_year_adm %&gt;%\n  distinct(school_year, district_id, current_year_adm_district, current_year_admw_district) %&gt;%\n  mutate(\n    adm_admw_ratio = current_year_admw_district/current_year_adm_district\n  ) %&gt;%\n  one_year_scatterplot(df = ., var_y = adm_admw_ratio, var_x = current_year_adm_district, log_y_on = F,\n                       lab_x = \"District ADM\",\n                       lab_y = \"Allocation rate per student\") +\n  scale_y_continuous(limits = c(0,10),\n                     breaks = 0:10)\n\n\n\n\n\n\n\ndistrict_year_adm %&gt;%\n  distinct(school_year, district_id, current_year_admw_district, current_year_eff_admw_district) %&gt;%\n  mutate(extra = current_year_eff_admw_district - current_year_admw_district) %&gt;%\n  one_year_scatterplot(df = ., var_y = extra, var_x = current_year_admw_district, log_y_on = F, log_x_on = T,\n                       lab_x = \"District Current-year ADMw\",\n                       lab_y = \"District Allocated ADMw (max of this or previous yeaar)\")\n\n\n\n\n\n\n\n\nWhat proportion of district ADM are categories that get exclusive funding?\n\ndistrict_year_subgroup_enrollment &lt;- district_year_adm %&gt;%\n  distinct(school_year, district_id, district_name, district_iep_students) %&gt;%\n  mutate(category = \"IEP\") %&gt;%\n  rename(\"current_year_adm\" = \"district_iep_students\") %&gt;%\n  rbind(\n  district_year_adm %&gt;%\n  filter(!grepl(\"IEP|School|Scholars\", category)) %&gt;%\n  group_by(school_year, category, district_id, district_name) %&gt;%\n  summarize(current_year_adm = sum(current_year_adm))) %&gt;%\n  rbind(hcd_year %&gt;%\n          select(school_year, actual_hcd_count, dist_id) %&gt;%\n          rename(\"district_id\" = \"dist_id\",\n                 \"current_year_adm\" = \"actual_hcd_count\") %&gt;%\n          mutate(category = \"HCD\")) %&gt;%\n  mutate(category = gsub(\"Students in \", \"\", category)) %&gt;%\n  group_by(school_year, district_id) %&gt;%\n  mutate(\n    prop_current_year_adm = current_year_adm/current_year_adm[category == \"ADMr\"],\n    total = current_year_adm[category == \"ADMr\"]\n  )\n\n`summarise()` has grouped output by 'school_year', 'category', 'district_id'.\nYou can override using the `.groups` argument.\n\n\n\ndistrict_year_subgroup_enrollment %&gt;%\n  ungroup() %&gt;%\n  group_by(school_year, category) %&gt;%\n  summarize(total = sum(current_year_adm)) %&gt;%\n  group_by(school_year) %&gt;%\n  mutate(\n    percentage = round(total*100/total[category == \"ADMr\"],3)\n  ) %&gt;%\n  filter(category != \"ADMr\") %&gt;%\n  ggplot(data = ., aes(x = percentage,\n             y = fct_reorder(factor(category), percentage))) +\n  geom_col(fill = \"cornflowerblue\") +\n  geom_text(aes(label = round(percentage,1)), nudge_x = 2, size = 2, color = \"gray30\") +\n  facet_wrap(~school_year, ncol = 3) +\n  theme_minimal() +\n  theme(\n    axis.title = element_blank(),\n    axis.text.y = element_text(lineheight = 0.5),\n    axis.text.x = element_blank()\n  ) \n\n`summarise()` has grouped output by 'school_year'. You can override using the\n`.groups` argument.\n\n\n\n\n\n\n\n\n\nProportion of subgroups by total enrollment\n\ncategories &lt;- unique(district_year_subgroup_enrollment$category)[-2]\n\nmap(categories,\n    ~one_year_scatterplot(\n      year = 2019,\n      df = filter(district_year_subgroup_enrollment, category == .x),\n      var_x = total,\n      var_y = prop_current_year_adm,\n      log_y_on = F,\n      lab_x = .x))\n\n[[1]]\n\n\n\n\n\n\n\n\n\n\n[[2]]\n\n\n\n\n\n\n\n\n\n\n[[3]]\n\n\n\n\n\n\n\n\n\n\n[[4]]\n\n\n\n\n\n\n\n\n\n\n[[5]]\n\n\n\n\n\n\n\n\n\n\n[[6]]\n\n\n\n\n\n\n\n\nmap(2011:2023, ~one_year_scatterplot(year = .x,\n                                     df = district_year_adm,\n                     var_x = district_iep_percent,\n                     var_y = district_iep_eff_weight,\n                     log_y_on = F,\n                     log_x_on = F))\n\n[[1]]\n\n\nWarning: Removed 5 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\n\n\n[[2]]\n\n\nWarning: Removed 5 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\n\n\n[[3]]\n\n\nWarning: Removed 8 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\n\n\n[[4]]\n\n\nWarning: Removed 7 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\n\n\n[[5]]\n\n\nWarning: Removed 6 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\n\n\n[[6]]\n\n\nWarning: Removed 8 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\n\n\n[[7]]\n\n\nWarning: Removed 9 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\n\n\n[[8]]\n\n\nWarning: Removed 9 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\n\n\n[[9]]\n\n\nWarning: Removed 6 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\n\n\n[[10]]\n\n\nWarning: Removed 5 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\n\n\n[[11]]\n\n\nWarning: Removed 8 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\n\n\n[[12]]\n\n\nWarning: Removed 8 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\n\n\n[[13]]\n\n\nWarning: Removed 6 rows containing missing values or values outside the scale range\n(`geom_point()`)."
  },
  {
    "objectID": "closeread_tru.html",
    "href": "closeread_tru.html",
    "title": "My First Closeread",
    "section": "",
    "text": "Hello World! Please read my Closeread story below.\n\n&lt; add paragraphs, images, code cells, etc. &gt;\n\n\n\n\n\n\n\n\n\n\n\nWhen this paragraph scrolls into view it will reveal a histogram. @cr-myplot\n\nThis paragraph and the one that follows will appear as one narrative block\nWhen these paragraphs scroll into view, they will reveal a histogram.\n\nThis is where we load the library. @cr-dplyr\n\n\nlibrary(dplyr)\nlibrary(palmerpenguins)\n\npenguins |&gt;\n  group_by(island) |&gt;\n  summarize(avg_bill_length = mean(bill_length_mm))"
  },
  {
    "objectID": "closeread_tru.knit.html",
    "href": "closeread_tru.knit.html",
    "title": "My First Closeread",
    "section": "",
    "text": "Hello World! Please read my Closeread story below.\n\n&lt; add paragraphs, images, code cells, etc. &gt;\n\n\n\n\n\n\n\n\n\n\n\nWhen this paragraph scrolls into view it will reveal a histogram. @cr-myplot\n\nThis paragraph and the one that follows will appear as one narrative block\nWhen these paragraphs scroll into view, they will reveal a histogram.\n\nThis is where we load the library. @cr-dplyr\n\n\nlibrary(dplyr)\nlibrary(palmerpenguins)\n\npenguins |&gt;\n  group_by(island) |&gt;\n  summarize(avg_bill_length = mean(bill_length_mm))"
  }
]